{"version":3,"sources":["components/DisplayData.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayData","props","weather","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeWeather","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","data","inputData","change","setState","envet","axios","get","then","res","weatherData","current","weather_descriptions","name","weather_icons","navigator","geolocation","getCurrentPosition","position","newCorrds","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bebfcc1.chunk.js","sourcesContent":["import React from 'react';\r\n// import props from 'props';\r\n\r\nfunction DisplayData(props){\r\n  // console.log(props.weather);\r\n  const{temperature, description, location, region, country, wind_speed, pressure, precip, humidity,img}=props.weather;\r\n  return(\r\n    <div className=\"user-weather\">\r\n      <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temperature}<sup>o</sup>C , {description}</h1>\r\n                    <h4>{location}<b>{region} , {country}</b></h4>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Wind Speed</b>(km/hr)</p>\r\n                    <h2>{wind_speed}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Preassure</b>(millibar)</p>\r\n                    <h2>{pressure}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Precipitation</b>(mm)</p>\r\n                    <h2>{precip}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Humidity</b>(%)</p>\r\n                    <h2>{humidity}</h2>\r\n                </div>\r\n\r\n            </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default DisplayData;","import React from 'react';\r\n// import props from 'props';\r\n\r\nfunction Navbar(props){\r\n  \r\n  return(\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h1 className=\"title\">Realtime Weather</h1>\r\n          </div>\r\n          <div>\r\n            <form className=\"region\" onSubmit={(e)=>props.changeWeather(e)}>\r\n              <input className=\"regioninput\" placeholder=\"Enter Your Location\" onChange={(e)=>{props.changeRegion(e.target.value)}}></input>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\nexport default Navbar;","import React from'react';\nimport axios from'axios';\nimport DisplayData from'./components/DisplayData';\nimport Navbar from'./components/Navbar';\nimport './App.css';\n\nclass App extends React.Component{\n  state = {\n    coords : {\n      latitude: 37,\n      longitude:127\n    },\n    data : {},\n    inputData:\"\",\n  }\n  componentDidMount(){\n    // console.log('render mouted');\n\n    if(navigator.geolocation){\n      // console.log('sup');\n      navigator.geolocation.getCurrentPosition((position) => {\n        // console.log(position.coords.latitude, position.coords.longitude);\n        let newCorrds ={\n          latitude: position.coords.latitude ,\n          longitude: position.coords.longitude\n        }\n        this.setState({coords:newCorrds});\n        // console.log(this.state.coords);\n        axios.get(`http://api.weatherstack.com/current?access_key=99c613127c68350788cb70877257a1be&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then((res)=>{\n          // console.log(res);\n          let weatherData ={\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n          this.setState({data:weatherData});\n        });\n      });\n    }else{\n      console.log('not');\n    }\n  }\n\n  change = (value)=>{\n    // console.log(value);\n    this.setState({inputData : value});\n    // console.log(this.state.inputData);\n  }\n  changeWeather =(envet) =>{\n    // envet.prevent\n    axios.get(`http://api.weatherstack.com/current?access_key=99c613127c68350788cb70877257a1be&query=${this.state.inputData}`).then((res)=>{\n          let weatherData ={\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n          this.setState({data:weatherData});\n        });\n  }\n  render(){\n      return (\n        <div className=\"App\">\n          <div className=\"container\">\n            <Navbar changeRegion={this.change} changeWeather = {this.changeWeather}/>\n            <DisplayData weather = {this.state.data} />\n          </div>\n        </div>\n      );\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}